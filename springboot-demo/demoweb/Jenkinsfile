pipeline {
   environment {
    image = "062211046697.dkr.ecr.us-east-2.amazonaws.com/springboot-demoweb"
	version = "1.0.0.$BUILD_NUMBER"
   }
  agent {
    node {
      label 'master'
    }

  }
  stages {
    stage('Build') {
      steps {
        sh 'cd springboot-demo/demoweb && mvn package'
      }
    }
    stage('Test') {
      steps {
        sh 'cd springboot-demo/demoweb && mvn test '
      }
    }
	  
	  stage('Code Quality') {
      steps {
        sh 'cd springboot-demo/demoweb && mvn sonar:sonar -Dsonar.host.url=http://0.0.0.0:9000'
      }
    }
	  
	  
    stage('Image Build&Publish') {
      steps {
        echo 'Build Images'
        script {
           sh '''docker build -t $image:$version ./springboot-demo/demoweb/
		 $(aws ecr get-login --no-include-email --region us-east-2 | sed 's|https://||')
		docker push $image:$version
		docker rmi $image:$version
				 
		   '''
            
           }

      }
    }
	
	 stage('Approval for Deployment in K8s') {
       steps {
            script {
              timeout(time: 10, unit: 'MINUTES') {
                input(id: "Deploy in K8s", message: "Do You want to proceed further for deployment in k8s", ok: 'Deploy')
              }
            }
        }
    }
	  
  }
}
